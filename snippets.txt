npm i video-js zustand zod react-hook-form nodemailer lucide-react iron-session handlebars date-fns crypto

//const include: Record<string, Record<string, boolean>> = {};
const include: Record<string, string[]> = {};

for (const r of resources) {
  for (const field of r.form) {
    if (field.type === "m2m") {
      if (!include[r.model]) include[r.model] = [];
      include[r.model].push(field.name);
      //if (!include[r.model]) include[r.model] = {};
      //include[r.model][field.name] = true;
    }
    /*if (field.type === 'fileUpload') {
      if (!files[r.model]) files[r.model] = [];
      files[r.model].push(field.name);
    }*/
  }
}

/*const models = resources.map((r) => ({
  model: r.model,
  resource: r.resource,
  relations: include[r.model] || [],
  //files: files[r.model] || [],
}));*/

if (filter.search) {
      const arr = filter.search.split("_");
      const field = arr.shift();
      const query = arr.reverse().reduce((res: any, key: string) => ({ [key]: res }), value);
      
      where[field] = query;
      return;
    }  

    if (key.includes("_")) {
      const arr = key.split("_");
      const field = arr.shift();
      const query = arr.reverse().reduce((res, key) => ({ [key]: res }), value);
      acc[field!] = query;
    } else {
      acc[key] = value;
    }

    resource?.filter.forEach((field) => {
    const value = searchParams.get('filters');
    console.log(value);
    console.log(JSON.parse(value as string));
    if (value) {
      /*if (field.type === "text") {
        where[field.name] = `contains__${value}`;
      } else if (field.type === "select-filter") {
        where[field.search!] = `in__${value}`;
      }*/
    }
  });

  /*resource?.filter.forEach((field) => {
    const value = searchParams.get(field.name);
    if (value) {
      if (field.type === "text") {
        where[field.name] = `contains__${value}`;
      } else if (field.type === "select-filter") {
        where[field.search!] = `in__${value}`;
      }
    }
  });*/
